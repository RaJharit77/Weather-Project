{"timestamp":"2025-06-27T11:07:02.791702","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-27T11:07:02.792780","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-27T11:07:05.103332Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T11:07:05.103636Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T11:07:05.103767Z","level":"info","event":"Current task name:clean_and_merge_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T11:07:05.103886Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T11:07:05.103999Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T11:07:05.104108Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T11:07:05.104214Z","level":"info","event":"Task operator:<Task(PythonOperator): clean_and_merge_data>","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T11:07:03.351570","level":"info","event":"Checking files in: /home/rajharit/airflow/dags/data/raw","logger":"root"}
{"timestamp":"2025-06-27T11:07:03.352093","level":"info","event":"Files present: [PosixPath('/home/rajharit/airflow/dags/data/raw/historical_weather.csv'), PosixPath('/home/rajharit/airflow/dags/data/raw/current_weather.csv')]","logger":"root"}
{"timestamp":"2025-06-27T11:07:03.352270","level":"info","event":"Chargement des fichiers CSV...","logger":"root"}
{"timestamp":"2025-06-27T11:07:03.362470","level":"info","event":"Historical data columns: Index(['city', 'year', 'month', 'avg_temp', 'precipitation', 'wind_speed',\n       'date'],\n      dtype='object')","logger":"root"}
{"timestamp":"2025-06-27T11:07:03.362967","level":"info","event":"Current data columns: Index(['city', 'date', 'temp', 'feels_like', 'temp_min', 'temp_max',\n       'pressure', 'humidity', 'precipitation', 'wind_speed', 'wind_deg',\n       'clouds', 'weather_desc'],\n      dtype='object')","logger":"root"}
{"timestamp":"2025-06-27T11:07:03.387324","level":"info","event":"Fusion terminée. Fichier sauvegardé : /home/rajharit/airflow/dags/data/processed/merged_weather_data.csv","logger":"root"}
{"timestamp":"2025-06-27T11:07:03.387621","level":"info","event":"Taille des données fusionnées : 427 lignes","logger":"root"}
{"timestamp":"2025-06-27T11:07:03.411887","level":"info","event":"Done. Returned value was:                city       date  month  ...  precipitation  wind_speed  humidity\n0             Paris 2018-01-01      1  ...          43.70        9.40       NaN\n1             Paris 2018-02-01      2  ...          42.50       14.30       NaN\n2             Paris 2018-03-01      3  ...          35.10       16.80       NaN\n3             Paris 2018-04-01      4  ...          19.30        9.60       NaN\n4             Paris 2018-05-01      5  ...          22.10       12.90       NaN\n..              ...        ...    ...  ...            ...         ...       ...\n422        New York 2025-06-27      6  ...           0.00        5.66      78.0\n423           Tokyo 2025-06-27      6  ...           0.00        1.03      75.0\n424    Antananarivo 2025-06-27      6  ...           0.00        4.12      60.0\n425  Rio de Janeiro 2025-06-27      6  ...           0.00        4.63      83.0\n426          Sydney 2025-06-27      6  ...           0.12        6.17      74.0\n\n[427 rows x 8 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-27T11:07:03.412256","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197b108-0936-7dd3-b496-1ed9e4832660'), task_id='clean_and_merge_data', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-27T10:56:23.308370+00:00', try_number=2, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): clean_and_merge_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 27, 11, 7, 1, 171405, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
