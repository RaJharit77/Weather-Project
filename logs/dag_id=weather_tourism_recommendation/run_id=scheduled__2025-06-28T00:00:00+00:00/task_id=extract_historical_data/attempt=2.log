{"timestamp":"2025-06-28T09:14:32.816003","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-28T09:14:32.817130","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-28T09:14:33.424301Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:14:33.424605Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:14:33.424760Z","level":"info","event":"Current task name:extract_historical_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:14:33.424952Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:14:33.433238","level":"info","event":"Done. Returned value was:       city        date  month  avg_temp  precipitation  wind_speed\n0    Paris  2023-01-01      1      12.0             55        11.0\n1    Paris  2023-02-01      2      14.0             60        12.0\n2    Paris  2023-03-01      3      16.0             65        13.0\n3    Paris  2023-04-01      4      18.0             70        14.0\n4    Paris  2023-05-01      5      20.0             75        15.0\n..     ...         ...    ...       ...            ...         ...\n79  Sydney  2029-08-01      8      29.0            102        19.8\n80  Sydney  2029-09-01      9      31.0            107        20.8\n81  Sydney  2029-10-01     10      33.0            112        21.8\n82  Sydney  2029-11-01     11      35.0            117        22.8\n83  Sydney  2029-12-01     12      37.0            122        23.8\n\n[588 rows x 6 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-28T09:14:33.433673","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197b5cc-6295-7f7c-a99b-a35eb9902866'), task_id='extract_historical_data', dag_id='weather_tourism_recommendation', run_id='scheduled__2025-06-28T00:00:00+00:00', try_number=2, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_historical_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 28, 9, 14, 32, 726940, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-28T09:14:33.454714Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:14:33.455050Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:14:33.528677Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_historical_data>","chan":"stdout","logger":"task"}
