{"timestamp":"2025-06-20T14:36:28.654627","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-20T14:36:28.655667","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-20T14:36:29.218004Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T14:36:29.218243Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T14:36:29.218374Z","level":"info","event":"Current task name:calculate_weather_scores","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T14:36:29.218477Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T14:36:29.157885","level":"info","event":"Chargement des données depuis /home/rajharit/airflow/dags/data/processed/merged_weather_data.csv","logger":"root"}
{"timestamp":"2025-06-20T14:36:29.166144","level":"info","event":"Calcul des scores météo","logger":"root"}
{"timestamp":"2025-06-20T14:36:29.169851","level":"info","event":"Agrégation des données","logger":"root"}
{"timestamp":"2025-06-20T14:36:29.178888","level":"info","event":"Données sauvegardées dans /home/rajharit/airflow/dags/data/outputs/monthly_weather_scores.csv","logger":"root"}
{"timestamp":"2025-06-20T14:36:29.204577","level":"info","event":"Done. Returned value was:         city  month  weather_score    temp  precipitation  wind_speed\n0     London      1        0.25000  10.000           50.0       10.00\n1     London      2        0.22500  12.000           55.0       11.00\n2     London      3        0.20000  14.000           60.0       12.00\n3     London      4        0.22500  16.000           65.0       13.00\n4     London      5        0.30000  18.000           70.0       14.00\n5     London      6        0.62950  23.180           37.5        9.90\n6     London      7        0.45000  22.000           80.0       16.00\n7     London      8        0.52500  24.000           85.0       17.00\n8     London      9        0.50000  26.000           90.0       18.00\n9     London     10        0.37500  28.000           95.0       19.00\n10    London     11        0.25000  30.000          100.0       20.00\n11    London     12        0.15000  32.000          105.0       21.00\n12  New York      1        0.25000  10.000           50.0       10.00\n13  New York      2        0.22500  12.000           55.0       11.00\n14  New York      3        0.20000  14.000           60.0       12.00\n15  New York      4        0.22500  16.000           65.0       13.00\n16  New York      5        0.30000  18.000           70.0       14.00\n17  New York      6        0.61985  21.835           37.5       10.94\n18  New York      7        0.45000  22.000           80.0       16.00\n19  New York      8        0.52500  24.000           85.0       17.00\n20  New York      9        0.50000  26.000           90.0       18.00\n21  New York     10        0.37500  28.000           95.0       19.00\n22  New York     11        0.25000  30.000          100.0       20.00\n23  New York     12        0.15000  32.000          105.0       21.00\n24     Paris      1        0.25000  10.000           50.0       10.00\n25     Paris      2        0.22500  12.000           55.0       11.00\n26     Paris      3        0.20000  14.000           60.0       12.00\n27     Paris      4        0.22500  16.000           65.0       13.00\n28     Paris      5        0.30000  18.000           70.0       14.00\n29     Paris      6        0.53335  25.225           37.5        9.29\n30     Paris      7        0.45000  22.000           80.0       16.00\n31     Paris      8        0.52500  24.000           85.0       17.00\n32     Paris      9        0.50000  26.000           90.0       18.00\n33     Paris     10        0.37500  28.000           95.0       19.00\n34     Paris     11        0.25000  30.000          100.0       20.00\n35     Paris     12        0.15000  32.000          105.0       21.00\n36     Tokyo      1        0.25000  10.000           50.0       10.00\n37     Tokyo      2        0.22500  12.000           55.0       11.00\n38     Tokyo      3        0.20000  14.000           60.0       12.00\n39     Tokyo      4        0.22500  16.000           65.0       13.00\n40     Tokyo      5        0.30000  18.000           70.0       14.00\n41     Tokyo      6        0.64815  22.125           37.5        9.56\n42     Tokyo      7        0.45000  22.000           80.0       16.00\n43     Tokyo      8        0.52500  24.000           85.0       17.00\n44     Tokyo      9        0.50000  26.000           90.0       18.00\n45     Tokyo     10        0.37500  28.000           95.0       19.00\n46     Tokyo     11        0.25000  30.000          100.0       20.00\n47     Tokyo     12        0.15000  32.000          105.0       21.00","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-20T14:36:29.204949","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01978dc4-e9ce-70f1-aeb6-4cdc2747ffba'), task_id='calculate_weather_scores', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-20T14:36:21.814138+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): calculate_weather_scores>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 20, 14, 36, 28, 554340, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-20T14:36:29.316382Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T14:36:29.316641Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T14:36:29.316759Z","level":"info","event":"Task operator:<Task(PythonOperator): calculate_weather_scores>","chan":"stdout","logger":"task"}
