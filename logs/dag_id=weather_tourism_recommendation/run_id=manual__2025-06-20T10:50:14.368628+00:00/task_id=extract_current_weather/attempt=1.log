{"timestamp":"2025-06-20T10:50:20.844316","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-20T10:50:20.845483","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-20T10:50:21.565896Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:50:21.566361Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:50:21.566589Z","level":"info","event":"Current task name:extract_current_weather","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:50:21.566723Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:50:24.081360","level":"info","event":"Done. Returned value was:        city        date   temp  precipitation  wind_speed  humidity\n0     Paris  2025-06-20  27.70              0        3.59        41\n1    London  2025-06-20  25.54              0        3.95        46\n2  New York  2025-06-20  19.24              0        6.64        70\n3     Tokyo  2025-06-20  26.01              0        6.51        68","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-20T10:50:24.081701","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01978cf5-e404-7559-8ed2-de2969efa6fe'), task_id='extract_current_weather', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-20T10:50:14.368628+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_current_weather>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 20, 10, 50, 19, 390498, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-20T10:50:24.419831Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:50:24.420053Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:50:24.420171Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_current_weather>","chan":"stdout","logger":"task"}
