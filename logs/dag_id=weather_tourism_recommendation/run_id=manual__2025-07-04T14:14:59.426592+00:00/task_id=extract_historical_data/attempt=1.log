{"timestamp":"2025-07-04T14:15:01.492406","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-04T14:15:01.493803","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-04T14:15:02.338914Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T14:15:02.344702Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T14:15:02.344948Z","level":"info","event":"Current task name:extract_historical_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T14:15:02.345064Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T14:15:02.336830","level":"info","event":"Done. Returned value was:        city        date  month  year  avg_temp  precipitation  wind_speed\n0     Paris  2018-01-01      1  2018      -0.5           53.7         8.2\n1     Paris  2018-02-01      2  2018       1.6           36.7        10.2\n2     Paris  2018-03-01      3  2018       5.0           16.2        10.8\n3     Paris  2018-04-01      4  2018       9.5           30.9        11.0\n4     Paris  2018-05-01      5  2018      16.2           27.0         8.5\n..      ...         ...    ...   ...       ...            ...         ...\n583  Sydney  2024-08-01      8  2024      21.3           94.2         9.6\n584  Sydney  2024-09-01      9  2024      22.5           85.7         9.4\n585  Sydney  2024-10-01     10  2024      18.4           92.4         9.0\n586  Sydney  2024-11-01     11  2024      12.9           67.3         9.7\n587  Sydney  2024-12-01     12  2024       9.8           48.5         8.7\n\n[588 rows x 7 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-04T14:15:02.337304","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197d5ca-60b9-7118-9639-1e0c81ef4924'), task_id='extract_historical_data', dag_id='weather_tourism_recommendation', run_id='manual__2025-07-04T14:14:59.426592+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_historical_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 7, 4, 14, 15, 0, 154268, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-07-04T14:15:02.645249Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T14:15:02.645717Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T14:15:02.645851Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_historical_data>","chan":"stdout","logger":"task"}
