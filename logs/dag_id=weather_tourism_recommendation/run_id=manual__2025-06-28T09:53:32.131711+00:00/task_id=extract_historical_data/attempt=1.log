{"timestamp":"2025-06-28T09:53:32.904625","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-28T09:53:32.906165","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-28T09:53:33.534340Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:53:33.534618Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:53:33.534759Z","level":"info","event":"Current task name:extract_historical_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:53:33.534874Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:53:33.526808","level":"info","event":"Done. Returned value was:        city        date  month  year  avg_temp  precipitation  wind_speed\n0     Paris  2022-01-01      1  2022      11.5           32.4         3.6\n1     Paris  2022-02-01      2  2022       8.9           50.0         9.1\n2     Paris  2022-03-01      3  2022      14.7           50.9         8.9\n3     Paris  2022-04-01      4  2022       8.3           41.9         9.3\n4     Paris  2022-05-01      5  2022      11.6           40.1         8.3\n..      ...         ...    ...   ...       ...            ...         ...\n247  Sydney  2024-08-01      8  2024      12.7           62.3        10.1\n248  Sydney  2024-09-01      9  2024      10.9           65.0         7.7\n249  Sydney  2024-10-01     10  2024      15.4           75.4         6.3\n250  Sydney  2024-11-01     11  2024      11.3           59.4         7.9\n251  Sydney  2024-12-01     12  2024      11.1           58.8        10.2\n\n[252 rows x 7 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-28T09:53:33.527248","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197b5f4-da08-7744-9006-b1d53f3ee06d'), task_id='extract_historical_data', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-28T09:53:32.131711+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_historical_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 28, 9, 53, 32, 782466, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-28T09:53:33.624423Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:53:33.624653Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T09:53:33.624770Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_historical_data>","chan":"stdout","logger":"task"}
