{"timestamp":"2025-07-05T19:21:24.303732","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T19:21:24.304820","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T19:21:24.862397Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:21:24.862645Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:21:24.862777Z","level":"info","event":"Current task name:extract_historical_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:21:24.862914Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:21:24.864137","level":"info","event":"Done. Returned value was:        city        date  month  year  avg_temp  precipitation  wind_speed\n0     Paris  2018-01-01      1  2018       3.4           20.0        11.0\n1     Paris  2018-02-01      2  2018       0.5           27.8         8.8\n2     Paris  2018-03-01      3  2018       3.2           36.7         9.5\n3     Paris  2018-04-01      4  2018       7.5           20.8        10.6\n4     Paris  2018-05-01      5  2018      16.7           54.4         8.2\n..      ...         ...    ...   ...       ...            ...         ...\n583  Sydney  2024-08-01      8  2024      22.6           59.4        10.0\n584  Sydney  2024-09-01      9  2024      19.3           71.9         8.1\n585  Sydney  2024-10-01     10  2024      19.3           78.3        11.3\n586  Sydney  2024-11-01     11  2024      15.8           53.0        11.2\n587  Sydney  2024-12-01     12  2024      12.7           54.9         9.1\n\n[588 rows x 7 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-05T19:21:24.864509","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197dc04-786c-7f24-b223-60a6501be0c2'), task_id='extract_historical_data', dag_id='weather_tourism_recommendation', run_id='scheduled__2025-07-05T00:00:00+00:00', try_number=2, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_historical_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 7, 5, 19, 21, 24, 227511, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-07-05T19:21:24.884046Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:21:24.884300Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:21:24.964595Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_historical_data>","chan":"stdout","logger":"task"}
