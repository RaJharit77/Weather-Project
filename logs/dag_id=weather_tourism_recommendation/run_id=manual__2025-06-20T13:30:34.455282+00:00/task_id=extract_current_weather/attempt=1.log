{"timestamp":"2025-06-20T13:30:34.767786","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-20T13:30:34.769157","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-20T13:30:35.406069Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:35.406346Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:35.406567Z","level":"info","event":"Current task name:extract_current_weather","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:35.406760Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:36.121726Z","level":"info","event":"Données incomplètes pour Paris","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:36.843290Z","level":"info","event":"Données incomplètes pour London","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:37.551054Z","level":"info","event":"Données incomplètes pour New York","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:38.214391Z","level":"info","event":"Données incomplètes pour Tokyo","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:38.223229","level":"info","event":"Done. Returned value was: Empty DataFrame\nColumns: []\nIndex: []","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-20T13:30:38.223593","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01978d88-ae6c-7c55-900e-42badae98666'), task_id='extract_current_weather', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-20T13:30:34.455282+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_current_weather>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 20, 13, 30, 34, 689685, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-20T13:30:38.359471Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:38.359717Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:30:38.359839Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_current_weather>","chan":"stdout","logger":"task"}
