{"timestamp":"2025-07-05T19:16:45.103331","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T19:16:45.104650","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T19:16:46.005339Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:16:46.005704Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:16:46.005844Z","level":"info","event":"Current task name:extract_historical_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:16:46.005989Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:16:45.988042","level":"info","event":"Done. Returned value was:        city        date  month  year  avg_temp  precipitation  wind_speed\n0     Paris  2018-01-01      1  2018       0.5           19.0         8.9\n1     Paris  2018-02-01      2  2018       1.3           34.2        11.9\n2     Paris  2018-03-01      3  2018       4.7           18.6        10.4\n3     Paris  2018-04-01      4  2018      11.3           39.3        10.9\n4     Paris  2018-05-01      5  2018      11.9           49.5         8.7\n..      ...         ...    ...   ...       ...            ...         ...\n583  Sydney  2024-08-01      8  2024      22.2           69.6         8.3\n584  Sydney  2024-09-01      9  2024      21.3           95.2        10.3\n585  Sydney  2024-10-01     10  2024      17.8           79.8        10.4\n586  Sydney  2024-11-01     11  2024      11.8           75.7         8.6\n587  Sydney  2024-12-01     12  2024      11.8           32.6        10.9\n\n[588 rows x 7 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-05T19:16:45.988595","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197dc04-fb3b-7794-bda8-20c3654e3ab2'), task_id='extract_historical_data', dag_id='weather_tourism_recommendation', run_id='manual__2025-07-05T19:16:43.103144+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_historical_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 7, 5, 19, 16, 43, 735171, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-07-05T19:16:46.123822Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:16:46.124082Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T19:16:46.124218Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_historical_data>","chan":"stdout","logger":"task"}
