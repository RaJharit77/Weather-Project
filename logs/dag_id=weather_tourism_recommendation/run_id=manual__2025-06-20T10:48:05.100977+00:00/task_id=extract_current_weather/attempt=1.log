{"timestamp":"2025-06-20T10:48:07.513045","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-20T10:48:07.514493","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-20T10:48:10.049259Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:48:10.049604Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:48:10.049805Z","level":"info","event":"Current task name:extract_current_weather","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:48:10.049970Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:48:12.625281","level":"info","event":"Done. Returned value was:        city        date   temp  precipitation  wind_speed  humidity\n0     Paris  2025-06-20  27.70              0        3.59        41\n1    London  2025-06-20  25.54              0        3.95        46\n2  New York  2025-06-20  19.24              0        6.64        70\n3     Tokyo  2025-06-20  26.01              0        6.51        68","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-20T10:48:12.625771","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01978cf3-eb20-731f-937f-3e1d905bdff1'), task_id='extract_current_weather', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-20T10:48:05.100977+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_current_weather>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 20, 10, 48, 6, 103876, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-20T10:48:56.011959Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:48:56.012097Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T10:48:56.012197Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_current_weather>","chan":"stdout","logger":"task"}
