{"timestamp":"2025-06-19T13:54:54.364941","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-19T13:54:54.365550","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-19T13:54:54.510503Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-19T13:54:54.510614Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-19T13:54:54.510659Z","level":"info","event":"Current task name:extract_current_weather","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-19T13:54:54.510700Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-19T13:54:57.006320","level":"info","event":"Done. Returned value was:        city        date   temp  precipitation  wind_speed  humidity\n0     Paris  2025-06-19  30.07              0        5.14        36\n1    London  2025-06-19  30.52              0        2.57        36\n2  New York  2025-06-19  28.36              0        4.12        72\n3     Tokyo  2025-06-19  25.96              0        4.12        77","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-19T13:54:57.006494","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01978878-973d-73e1-b5f9-244c48eddc39'), task_id='extract_current_weather', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-19T13:54:53.872982+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_current_weather>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 19, 13, 54, 54, 328275, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-19T13:54:57.081356Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-19T13:54:57.081503Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-19T13:54:57.081547Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_current_weather>","chan":"stdout","logger":"task"}
