{"timestamp":"2025-06-28T12:04:29.071752","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-28T12:04:29.072838","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-28T12:04:29.678156Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T12:04:29.678401Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T12:04:29.678529Z","level":"info","event":"Current task name:extract_historical_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T12:04:29.678665Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T12:04:29.682602","level":"info","event":"Done. Returned value was:        city        date  month  year  avg_temp  precipitation  wind_speed\n0     Paris  2018-01-01      1  2018       3.9           47.2         9.6\n1     Paris  2018-02-01      2  2018       5.7           42.3         8.3\n2     Paris  2018-03-01      3  2018       3.8           26.7        10.5\n3     Paris  2018-04-01      4  2018      10.4            5.7         8.6\n4     Paris  2018-05-01      5  2018      16.1           23.7         9.1\n..      ...         ...    ...   ...       ...            ...         ...\n583  Sydney  2024-08-01      8  2024      21.7           77.0        11.7\n584  Sydney  2024-09-01      9  2024      23.4           85.8        10.6\n585  Sydney  2024-10-01     10  2024      16.3           60.5        10.0\n586  Sydney  2024-11-01     11  2024      11.7           45.1         9.8\n587  Sydney  2024-12-01     12  2024       7.4           42.2        11.9\n\n[588 rows x 7 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-28T12:04:29.682966","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197b66c-baf0-78cc-a2b0-c3dc4c75d0e4'), task_id='extract_historical_data', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-28T12:04:28.505425+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_historical_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 28, 12, 4, 28, 956938, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-28T12:04:29.701293Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T12:04:29.701573Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-28T12:04:29.701773Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_historical_data>","chan":"stdout","logger":"task"}
