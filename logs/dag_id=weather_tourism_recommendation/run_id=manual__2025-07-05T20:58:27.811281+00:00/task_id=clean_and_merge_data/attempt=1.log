{"timestamp":"2025-07-05T20:58:34.845001","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T20:58:34.846113","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T20:58:35.358777","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-07-05T20:58:35.373857","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-07-05T20:58:35.441454Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:35.441744Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:35.441947Z","level":"info","event":"Current task name:clean_and_merge_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:35.442097Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:35.468963","level":"info","event":"Done. Returned value was:               city       date  month  ...  precipitation  wind_speed  humidity\n0            Paris 2023-01-01      1  ...          53.30       11.30       NaN\n1            Paris 2023-02-01      2  ...          30.50       10.10       NaN\n2            Paris 2023-03-01      3  ...           7.30       11.10       NaN\n3            Paris 2023-04-01      4  ...          28.30       10.30       NaN\n4            Paris 2023-05-01      5  ...          50.20        9.70       NaN\n..             ...        ...    ...  ...            ...         ...       ...\n2         New York 2025-07-05      7  ...           0.00        4.63      43.0\n3            Tokyo 2025-07-05      7  ...           0.00        3.60      81.0\n4     Antananarivo 2025-07-05      7  ...           0.00        2.57      87.0\n5   Rio de Janeiro 2025-07-05      7  ...           0.00        5.14      71.0\n6           Sydney 2025-07-05      7  ...           0.52        0.89      87.0\n\n[595 rows x 8 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-05T20:58:35.469523","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197dc62-207d-7665-b0ae-804b08fbf100'), task_id='clean_and_merge_data', dag_id='weather_tourism_recommendation', run_id='manual__2025-07-05T20:58:27.811281+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): clean_and_merge_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 7, 5, 20, 58, 34, 744426, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-07-05T20:58:35.572468Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:35.572820Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:35.573001Z","level":"info","event":"Task operator:<Task(PythonOperator): clean_and_merge_data>","chan":"stdout","logger":"task"}
