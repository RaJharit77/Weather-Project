{"timestamp":"2025-07-05T20:58:28.689252","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T20:58:28.691437","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T20:58:29.329484","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-07-05T20:58:29.413103","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-07-05T20:58:29.542168Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:29.542440Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:29.542585Z","level":"info","event":"Current task name:extract_current_weather","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:29.542714Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:29.463418","level":"warning","event":"Using Variable.get from `airflow.models` is deprecated.Please use `from airflow.sdk import Variable` instead","category":"DeprecationWarning","filename":"/home/rajharit/airflow_env/lib/python3.10/site-packages/airflow/models/variable.py","lineno":147,"logger":"py.warnings"}
{"timestamp":"2025-07-05T20:58:29.463855","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-07-05T20:58:33.552903","level":"info","event":"Done. Returned value was:              city        date   temp  precipitation  wind_speed  humidity\n0           Paris  2025-07-05  21.76           0.00        4.12        40\n1          London  2025-07-05  20.14           0.00        5.14        78\n2        New York  2025-07-05  30.11           0.00        4.63        43\n3           Tokyo  2025-07-05  27.10           0.00        3.60        81\n4    Antananarivo  2025-07-05  10.98           0.00        2.57        87\n5  Rio de Janeiro  2025-07-05  19.99           0.00        5.14        71\n6          Sydney  2025-07-05  11.43           0.52        0.89        87","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-05T20:58:33.553279","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197dc62-207c-7a41-8f81-08effaf2c200'), task_id='extract_current_weather', dag_id='weather_tourism_recommendation', run_id='manual__2025-07-05T20:58:27.811281+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_current_weather>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 7, 5, 20, 58, 28, 560573, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-07-05T20:58:33.643742Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:33.644008Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T20:58:33.644138Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_current_weather>","chan":"stdout","logger":"task"}
