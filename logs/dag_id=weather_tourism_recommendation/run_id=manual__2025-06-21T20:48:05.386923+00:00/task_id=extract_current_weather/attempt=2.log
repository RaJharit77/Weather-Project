{"timestamp":"2025-06-21T20:53:06.643093","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-21T20:53:06.643752","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-21T20:53:07.045107Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-21T20:53:07.045281Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-21T20:53:07.045331Z","level":"info","event":"Current task name:extract_current_weather","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-21T20:53:07.045373Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-21T20:53:06.940763","level":"warning","event":"Using Variable.get from `airflow.models` is deprecated.Please use `from airflow.sdk import Variable` instead","category":"DeprecationWarning","filename":"/home/rajharit/airflow_env/lib/python3.10/site-packages/airflow/models/variable.py","lineno":147,"logger":"py.warnings"}
{"timestamp":"2025-06-21T20:53:06.941549","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-21T20:53:10.575423","level":"info","event":"Done. Returned value was:        city        date   temp  precipitation  wind_speed  humidity\n0     Paris  2025-06-21  27.33              0        2.44        31\n1    London  2025-06-21  22.57              0        4.11        44\n2  New York  2025-06-21  30.21              0        4.00        52\n3     Tokyo  2025-06-21  24.77              0        7.78        65","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-21T20:53:10.575573","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197943f-991e-718c-9295-688b9b8894b0'), task_id='extract_current_weather', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-21T20:48:05.386923+00:00', try_number=2, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_current_weather>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 21, 20, 53, 6, 588015, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-21T20:53:10.705650Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-21T20:53:10.705783Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-21T20:53:10.705832Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_current_weather>","chan":"stdout","logger":"task"}
