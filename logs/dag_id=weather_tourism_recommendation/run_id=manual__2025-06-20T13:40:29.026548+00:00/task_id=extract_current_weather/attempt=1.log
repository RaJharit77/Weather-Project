{"timestamp":"2025-06-20T13:40:30.101286","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-20T13:40:30.102666","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-20T13:40:30.764247Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:30.764526Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:30.764655Z","level":"info","event":"Current task name:extract_current_weather","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:30.764776Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:30.655712","level":"warning","event":"Using Variable.get from `airflow.models` is deprecated.Please use `from airflow.sdk import Variable` instead","category":"DeprecationWarning","filename":"/home/rajharit/airflow_env/lib/python3.10/site-packages/airflow/models/variable.py","lineno":147,"logger":"py.warnings"}
{"timestamp":"2025-06-20T13:40:30.657508","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-20T13:40:33.664991","level":"info","event":"Done. Returned value was:        city        date   temp  precipitation  wind_speed  humidity\n0     Paris  2025-06-20  30.04              0        3.61        31\n1    London  2025-06-20  26.49              0        4.80        42\n2  New York  2025-06-20  22.59              0        6.88        57\n3     Tokyo  2025-06-20  24.36              0        4.44        76","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-20T13:40:33.665375","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01978d91-c100-7ed4-ba2b-542326f8ad79'), task_id='extract_current_weather', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-20T13:40:29.026548+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): extract_current_weather>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 20, 13, 40, 30, 6270, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-20T13:40:33.799699Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:33.800091Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:33.800339Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_current_weather>","chan":"stdout","logger":"task"}
