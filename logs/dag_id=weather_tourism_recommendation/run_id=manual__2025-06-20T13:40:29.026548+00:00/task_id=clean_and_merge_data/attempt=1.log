{"timestamp":"2025-06-20T13:40:34.024540","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-20T13:40:34.025734","level":"info","event":"Filling up the DagBag from /home/rajharit/airflow/dags/meteo_tourism_dags.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-20T13:40:34.636748Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:34.637078Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:34.637330Z","level":"info","event":"Current task name:clean_and_merge_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:34.637550Z","level":"info","event":"Dag name:weather_tourism_recommendation","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:34.638073","level":"info","event":"Done. Returned value was:         city  month   temp  precipitation  wind_speed       date  humidity\n0      Paris      1  10.00             50       10.00 2023-01-01       NaN\n1      Paris      2  12.00             55       11.00 2023-02-01       NaN\n2      Paris      3  14.00             60       12.00 2023-03-01       NaN\n3      Paris      4  16.00             65       13.00 2023-04-01       NaN\n4      Paris      5  18.00             70       14.00 2023-05-01       NaN\n5      Paris      6  20.00             75       15.00 2023-06-01       NaN\n6      Paris      7  22.00             80       16.00 2023-07-01       NaN\n7      Paris      8  24.00             85       17.00 2023-08-01       NaN\n8      Paris      9  26.00             90       18.00 2023-09-01       NaN\n9      Paris     10  28.00             95       19.00 2023-10-01       NaN\n10     Paris     11  30.00            100       20.00 2023-11-01       NaN\n11     Paris     12  32.00            105       21.00 2023-12-01       NaN\n12    London      1  10.00             50       10.00 2023-01-01       NaN\n13    London      2  12.00             55       11.00 2023-02-01       NaN\n14    London      3  14.00             60       12.00 2023-03-01       NaN\n15    London      4  16.00             65       13.00 2023-04-01       NaN\n16    London      5  18.00             70       14.00 2023-05-01       NaN\n17    London      6  20.00             75       15.00 2023-06-01       NaN\n18    London      7  22.00             80       16.00 2023-07-01       NaN\n19    London      8  24.00             85       17.00 2023-08-01       NaN\n20    London      9  26.00             90       18.00 2023-09-01       NaN\n21    London     10  28.00             95       19.00 2023-10-01       NaN\n22    London     11  30.00            100       20.00 2023-11-01       NaN\n23    London     12  32.00            105       21.00 2023-12-01       NaN\n24  New York      1  10.00             50       10.00 2023-01-01       NaN\n25  New York      2  12.00             55       11.00 2023-02-01       NaN\n26  New York      3  14.00             60       12.00 2023-03-01       NaN\n27  New York      4  16.00             65       13.00 2023-04-01       NaN\n28  New York      5  18.00             70       14.00 2023-05-01       NaN\n29  New York      6  20.00             75       15.00 2023-06-01       NaN\n30  New York      7  22.00             80       16.00 2023-07-01       NaN\n31  New York      8  24.00             85       17.00 2023-08-01       NaN\n32  New York      9  26.00             90       18.00 2023-09-01       NaN\n33  New York     10  28.00             95       19.00 2023-10-01       NaN\n34  New York     11  30.00            100       20.00 2023-11-01       NaN\n35  New York     12  32.00            105       21.00 2023-12-01       NaN\n36     Tokyo      1  10.00             50       10.00 2023-01-01       NaN\n37     Tokyo      2  12.00             55       11.00 2023-02-01       NaN\n38     Tokyo      3  14.00             60       12.00 2023-03-01       NaN\n39     Tokyo      4  16.00             65       13.00 2023-04-01       NaN\n40     Tokyo      5  18.00             70       14.00 2023-05-01       NaN\n41     Tokyo      6  20.00             75       15.00 2023-06-01       NaN\n42     Tokyo      7  22.00             80       16.00 2023-07-01       NaN\n43     Tokyo      8  24.00             85       17.00 2023-08-01       NaN\n44     Tokyo      9  26.00             90       18.00 2023-09-01       NaN\n45     Tokyo     10  28.00             95       19.00 2023-10-01       NaN\n46     Tokyo     11  30.00            100       20.00 2023-11-01       NaN\n47     Tokyo     12  32.00            105       21.00 2023-12-01       NaN\n0      Paris      6  30.04              0        3.61 2025-06-20      31.0\n1     London      6  26.49              0        4.80 2025-06-20      42.0\n2   New York      6  22.59              0        6.88 2025-06-20      57.0\n3      Tokyo      6  24.36              0        4.44 2025-06-20      76.0","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-20T13:40:34.638660","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01978d91-c101-780c-9b7b-0b403b418ed8'), task_id='clean_and_merge_data', dag_id='weather_tourism_recommendation', run_id='manual__2025-06-20T13:40:29.026548+00:00', try_number=1, map_index=-1, hostname='rajoharitiana-dellg155511', context_carrier=None, task=<Task(PythonOperator): clean_and_merge_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 20, 13, 40, 33, 937929, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-06-20T13:40:34.662823Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:34.663255Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T13:40:34.780426Z","level":"info","event":"Task operator:<Task(PythonOperator): clean_and_merge_data>","chan":"stdout","logger":"task"}
